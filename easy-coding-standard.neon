checkers:
    # Classes
    - PHP_CodeSniffer\Standards\Generic\Sniffs\Classes\DuplicateClassNameSniff
    - PHP_CodeSniffer\Standards\PSR2\Sniffs\Classes\PropertyDeclarationSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ValidClassNameSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\LowercaseClassKeywordsSniff

    # Code Analysis
    - PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\JumbledIncrementerSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\UnconditionalIfStatementSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\UselessOverridingMethodSniff

    # Control Structures
    - PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff
    - PHP_CodeSniffer\Standards\PEAR\Sniffs\ControlStructures\MultiLineConditionSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff
    - PHP_CodeSniffer\Standards\PSR2\Sniffs\ControlStructures\ElseIfDeclarationSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForEachLoopDeclarationSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\LowercaseDeclarationSniff
    - Symplify\CodingStandard\Sniffs\ControlStructures\NewClassSniff
    - SlevomatCodingStandard\Sniffs\ControlStructures\DisallowEqualOperatorsSniff
    - SlevomatCodingStandard\Sniffs\ControlStructures\YodaComparisonSniff
    - SlevomatCodingStandard\Sniffs\Exceptions\DeadCatchSniff
    - SlevomatCodingStandard\Sniffs\Exceptions\ReferenceThrowableOnlySniff

    # Files
    - PHP_CodeSniffer\Standards\Generic\Sniffs\Files\ByteOrderMarkSniff
    PHP_CodeSniffer\Standards\Generic\Sniffs\Files\LineLengthSniff:
        lineLimit: 120
        absoluteLineLimit: 120

    # PSR-4
    - PhpCsFixer\Fixer\Basic\Psr4Fixer
    - PHP_CodeSniffer\Standards\Generic\Sniffs\Files\OneClassPerFileSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\Files\OneInterfacePerFileSniff

    # Formatting
    - PhpCsFixer\Fixer\CastNotation\CastSpacesFixer
    - PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\FunctionCallArgumentSpacingSniff
    - PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\ValidDefaultValueSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\Functions\FunctionDeclarationSniff
    # requires spaces probably
    # - PHP_CodeSniffer\Standards\Squiz\Sniffs\Functions\MultiLineFunctionDeclarationSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\Functions\LowercaseFunctionKeywordsSniff

    # Metrics
    - PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\CyclomaticComplexitySniff
    PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\NestingLevelSniff:
        nestingLevel: 3
        absoluteNestingLevel: 6
    - PHP_CodeSniffer\Standards\PSR2\Sniffs\Methods\MethodDeclarationSniff

    # Naming Conventions
    - PHP_CodeSniffer\Standards\Generic\Sniffs\NamingConventions\UpperCaseConstantNameSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\NamingConventions\CamelCapsFunctionNameSniff

    # PHP
    - PhpCsFixer\Fixer\PhpTag\FullOpeningTagFixer
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\NonExecutableCodeSniff

    # WhiteSpace
    - PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\DisallowTabIndentSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ScopeKeywordSpacingSniff
    PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff:
        ignoreBlankLines: false

    # Commenting
    - Symplify\CodingStandard\Sniffs\Commenting\BlockPropertyCommentSniff
    - Symplify\CodingStandard\Sniffs\Commenting\VarPropertyCommentSniff
    - Symplify\CodingStandard\Sniffs\Commenting\VarConstantCommentSniff

    # Debug and dev
    - Symplify\CodingStandard\Sniffs\Debug\DebugFunctionCallSniff
    - Symplify\CodingStandard\Sniffs\Debug\CommentedOutCodeSniff

    # Namespaces
    - Symplify\CodingStandard\Sniffs\Namespaces\ClassNamesWithoutPreSlashSniff
    - PhpCsFixer\Fixer\NamespaceNotation\SingleBlankLineBeforeNamespaceFixer
    - PhpCsFixer\Fixer\NamespaceNotation\BlankLineAfterNamespaceFixer

    # Naming
    - Symplify\CodingStandard\Sniffs\Naming\AbstractClassNameSniff
    - Symplify\CodingStandard\Sniffs\Naming\InterfaceNameSniff
#
    # Slevomat
    - SlevomatCodingStandard\Sniffs\Classes\UnusedPrivateElementsSniff
    SlevomatCodingStandard\Sniffs\Commenting\ForbiddenAnnotationsSniff:
        forbiddenAnnotations:
            - @author
            - @created
            - @copyright
            - @license
            - @package
            - @version

    # Type Hints
    - SlevomatCodingStandard\Sniffs\TypeHints\LongTypeHintsSniff
    - SlevomatCodingStandard\Sniffs\TypeHints\ParameterTypeHintSpacingSniff
    - SlevomatCodingStandard\Sniffs\TypeHints\NullableTypeForNullDefaultValueSniff
    - SlevomatCodingStandard\Sniffs\TypeHints\ReturnTypeHintSpacingSniff
    SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff:
        usefulAnnotations:
            - @todo
            - @dataProvider
            - @expectedException
            - @throws
        enableEachParameterAndReturnInspection: true
    - SlevomatCodingStandard\Sniffs\Namespaces\AlphabeticallySortedUsesSniff
    - SlevomatCodingStandard\Sniffs\Namespaces\DisallowGroupUseSniff
    - SlevomatCodingStandard\Sniffs\Namespaces\MultipleUsesPerLineSniff
    - SlevomatCodingStandard\Sniffs\Namespaces\ReferenceUsedNamesOnlySniff
    - SlevomatCodingStandard\Sniffs\Namespaces\UseDoesNotStartWithBackslashSniff
    - SlevomatCodingStandard\Sniffs\Namespaces\UseFromSameNamespaceSniff

    # spaces
    - PhpCsFixer\Fixer\Whitespace\IndentationTypeFixer
    PhpCsFixer\Fixer\Operator\ConcatSpaceFixer:
        spacing: one
    PhpCsFixer\Fixer\ArrayNotation\ArraySyntaxFixer:
        syntax: short
    - PhpCsFixer\Fixer\ClassNotation\OrderedClassElementsFixer
    - PhpCsFixer\Fixer\LanguageConstruct\DirConstantFixer
    - PhpCsFixer\Fixer\CastNotation\ModernizeTypesCastingFixer
    - PhpCsFixer\Fixer\Strict\DeclareStrictTypesFixer
    - PhpCsFixer\Fixer\Semicolon\SemicolonAfterInstructionFixer
    - PhpCsFixer\Fixer\ReturnNotation\SimplifiedNullReturnFixer
    - PhpCsFixer\Fixer\Operator\NotOperatorWithSuccessorSpaceFixer
    - PhpCsFixer\Fixer\ControlStructure\NoUselessElseFixer
    - PhpCsFixer\Fixer\ReturnNotation\NoUselessReturnFixer
    - PhpCsFixer\Fixer\Import\OrderedImportsFixer
    - PhpCsFixer\Fixer\LanguageConstruct\CombineConsecutiveUnsetsFixer
    - PhpCsFixer\Fixer\Strict\StrictComparisonFixer
    - PhpCsFixer\Fixer\Alias\EregToPregFixer
    - PhpCsFixer\Fixer\Phpdoc\GeneralPhpdocAnnotationRemoveFixer

    # PHPUnit
    - PhpCsFixer\Fixer\PhpUnit\PhpUnitStrictFixer
    - PhpCsFixer\Fixer\PhpUnit\PhpUnitFqcnAnnotationFixer
    - Symplify\CodingStandard\Sniffs\PHPUnit\FinalTestCaseSniff

    # PSR2 (official)
    - PhpCsFixer\Fixer\ControlStructure\ElseifFixer
    - PhpCsFixer\Fixer\FunctionNotation\FunctionDeclarationFixer

    # Fixes to spaces
    # - PhpCsFixer\Fixer\Whitespace\IndentationTypeFixer
    - PhpCsFixer\Fixer\Whitespace\LineEndingFixer
    - PhpCsFixer\Fixer\Casing\LowercaseKeywordsFixer
    - PhpCsFixer\Fixer\FunctionNotation\MethodArgumentSpaceFixer
    - PhpCsFixer\Fixer\PhpTag\NoClosingTagFixer
    - PhpCsFixer\Fixer\FunctionNotation\NoSpacesAfterFunctionNameFixer
    - PhpCsFixer\Fixer\Whitespace\NoSpacesInsideParenthesisFixer
    - PhpCsFixer\Fixer\Whitespace\NoTrailingWhitespaceFixer
    - PhpCsFixer\Fixer\Comment\NoTrailingWhitespaceInCommentFixer
    - PhpCsFixer\Fixer\Whitespace\SingleBlankLineAtEofFixer
    PhpCsFixer\Fixer\ClassNotation\SingleClassElementPerStatementFixer:
        - property
    - PhpCsFixer\Fixer\Import\SingleImportPerStatementFixer
    - PhpCsFixer\Fixer\Import\SingleLineAfterImportsFixer
    - PhpCsFixer\Fixer\ControlStructure\SwitchCaseSemicolonToColonFixer
    - PhpCsFixer\Fixer\ControlStructure\SwitchCaseSpaceFixer

    # Symfony (official)
    - PhpCsFixer\Fixer\ReturnNotation\BlankLineBeforeReturnFixer
    # requires spaces
    # PhpCsFixer\Fixer\Basic\BracesFixer:
    #    allow_single_line_closure: true
    PhpCsFixer\Fixer\ClassNotation\ClassDefinitionFixer:
        singleLine: true
    - PhpCsFixer\Fixer\LanguageConstruct\DeclareEqualNormalizeFixer
    - PhpCsFixer\Fixer\FunctionNotation\FunctionTypehintSpaceFixer
    - PhpCsFixer\Fixer\CastNotation\LowercaseCastFixer
    - PhpCsFixer\Fixer\ClassNotation\MethodSeparationFixer
    - PhpCsFixer\Fixer\ClassNotation\NoBlankLinesAfterClassOpeningFixer
    - PhpCsFixer\Fixer\Phpdoc\NoBlankLinesAfterPhpdocFixer
    PhpCsFixer\Fixer\Whitespace\NoExtraConsecutiveBlankLinesFixer:
        - curly_brace_block
        - extra
        - parenthesis_brace_block
        - square_brace_block
        - throw
        - use
    - PhpCsFixer\Fixer\Import\NoUnusedImportsFixer
    - PhpCsFixer\Fixer\Phpdoc\PhpdocIndentFixer
    - PhpCsFixer\Fixer\Phpdoc\PhpdocScalarFixer
    - PhpCsFixer\Fixer\Phpdoc\PhpdocSingleLineVarSpacingFixer
    - PhpCsFixer\Fixer\Phpdoc\PhpdocSummaryFixer
    - PhpCsFixer\Fixer\Phpdoc\PhpdocTypesFixer
    - PhpCsFixer\Fixer\Operator\PreIncrementFixer
    - PhpCsFixer\Fixer\StringNotation\SingleQuoteFixer
    - PhpCsFixer\Fixer\Operator\TernaryOperatorSpacesFixer
    - PhpCsFixer\Fixer\Operator\TernaryToNullCoalescingFixer
    - PhpCsFixer\Fixer\ArrayNotation\TrimArraySpacesFixer
    - PhpCsFixer\Fixer\ArrayNotation\WhitespaceAfterCommaInArrayFixer

    # PHP 7.1 and modern PHP
    PhpCsFixer\Fixer\ClassNotation\VisibilityRequiredFixer:
        - const
        - property
        - method

    # new since PhpCsFixer 2.1/2.2
    - PhpCsFixer\Fixer\Basic\NonPrintableCharacterFixer

    # Architecture
    - Symplify\CodingStandard\Sniffs\Architecture\ForbiddenTraitSniff
    - Symplify\CodingStandard\Sniffs\Classes\EqualInterfaceImplementationSniff
    - Symplify\CodingStandard\Sniffs\Classes\FinalInterfaceSniff
